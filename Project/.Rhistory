settlement.name == "grape" ~ "Einav",
settlement.name == "Dubb" ~ "Dovev",
settlement.name == "antimony" ~ "Kahal",
settlement.name == "Yavnal" ~ "Yavne'el",
settlement.name == "hardware" ~ "Hamra",
settlement.name == "garden fruit" ~ "Pri Gan",
settlement.name == "Almond" ~ "Shaked",
settlement.name == "Head turned" ~ "Rosh Pinna",
settlement.name == "Frankincense" ~ "Ma'ale Levona",
settlement.name == "Abraham's demons" ~ "Sdei Avraham",
TRUE ~ settlement.name  # Keeps other values unchanged
)
)
# Renaming the Hebrew variables:
Kneset22 <- Kneset22 %>%
rename(
Avoda = "אמת",
Yahadut_Hatora = "ג",
Hadash_Raam = "ודעם",
Ozma_Calcalit = "ז",
Democratura = "זכ",
Zegut = "זן",
Zomet = "זץ",
Yamina = "טב",
Manhigut_Hevratit = "י",
Adom_lavan = "יז",
Notsrit_liberalit = "ינ",
Kvod_haadam = "יף",
Gush_Tanachi = "יק",
Noam = "כ",
Ahdut_amamit = "כי",
Otsma_yehudit = "כף",
Israel_Beitenu = "ל",
Halicud = "מחל",
Merets = "מרצ",
Mitkademt = "נ",
Kavod_veshivion = "נך",
Kol_Israel = "נץ",
Kahul_Lavan = "פה",
Piratim = "ףז",
Zedek = "צ",
Zafon = "צן",
Daam = "ץ",
Zchutotinu = "ק",
Seder_Hadash = "קך",
Kama = "קץ",
Yamin_hiluni = "רק",
Shas = "שס",
)
# mutate the names of the cities that are in other datasets.
Kneset22 <- Kneset22 %>%
mutate(
settlement.name = case_when(
settlement.name =="horizons" ~ "Ofakim",
settlement.name =="The view of the Galilee" ~ "Nof Hagalil",
settlement.name == "my peace" ~  "Shlomi" ,
settlement.name == "routes" ~ "Netivot",
settlement.name == "horizons" ~ "Ofakim",
settlement.name == "The view of the Galilee" ~ "Nof Hagalil",
settlement.name == "my peace" ~  "Shlomi" ,
settlement.name == "routes" ~ "Netivot",
settlement.name == "streets" ~ "Rehovot",
settlement.name == "Area" ~ "Azur",
settlement.name == "רחובות" ~ "Rehovot",
settlement.name == "fresh" ~ "Raanana",
settlement.name == "sons of Aish" ~ "Bnei Aish",
settlement.name == "a horse" ~ "Susya",
settlement.name == "scythe" ~ "Hermesh",
settlement.name == "pestle" ~ "Eli",
settlement.name == "ridges" ~ "Rekhasim",
settlement.name == "crimson" ~ "Argaman",
settlement.name == "earing" ~ "Harish",
settlement.name == "anemone" ~ "Kalanit",
settlement.name == "I will tell" ~ "Metzad",
settlement.name == "crop" ~ "Yevul",
settlement.name == "stake" ~ "Yated",
settlement.name == "Come on, Zoran" ~ "Kadima-Zoran",
settlement.name == "a fence" ~ "Gedera",
settlement.name == "measles" ~ "Hatzeva",
settlement.name == "Furia-Neva is working" ~ "Poria–Neve Oved",
settlement.name == "Ptolemy Yosef" ~ "Talmei Yosef",
settlement.name == "Solid stones" ~ "Avnei Eitan",
settlement.name == "horn" ~ "Tzofar",
settlement.name == "Horns of Samaria" ~ "Karnei Shomron",
settlement.name == "sapphire" ~ "Sapir",
settlement.name == "dawn" ~ "Tzohar",
settlement.name == "truffle" ~ "Kmehin",
settlement.name == "Chinese radish" ~ "Kadesh Barnea",
settlement.name == "towers" ~ "Migdalim",
settlement.name == "harvesting" ~ "Katzir",
settlement.name == "emerald" ~ "Bareket",
settlement.name == "A souvenir of her house" ~ "Mazkeret Batya",
settlement.name == "darling" ~ "Yakir",
settlement.name == "tower" ~ "Migdal",
settlement.name == "Ancients" ~ "Kedumim",
settlement.name == "face friend" ~ "Ma'ale Hever",
settlement.name == "on" ~ "Sha'al",
settlement.name == "Gold leaves" ~ "Alei Zahav",
settlement.name == "better" ~ "Yitav",
settlement.name == "Bethel" ~ "Beit El",
settlement.name == "Sheila" ~ "Shilo",
settlement.name == "Gems" ~ "Avnei Hefetz",
settlement.name == "Tarshiha" ~ "Ma'alot-Tarshiha",
settlement.name == "diligent" ~ "Harutzim",
settlement.name == "Roy" ~ "Ro'i",
settlement.name == "flint" ~ "Halamish",
settlement.name == "roots" ~ "Shorashim",
settlement.name == "Absalom" ~ "Avshalom",
settlement.name == "Dotan's introduction" ~ "Mevo Dotan",
settlement.name == "The Galilee" ~ "Gornot HaGalil",
settlement.name == "Shafram" ~ "Shfar'am",
settlement.name == "torches" ~ "Lapidot",
settlement.name == "Apple village" ~ "Kfar Tapuach",
settlement.name == "its openings" ~ "Petahya",
settlement.name == "grape" ~ "Einav",
settlement.name == "Dubb" ~ "Dovev",
settlement.name == "antimony" ~ "Kahal",
settlement.name == "Yavnal" ~ "Yavne'el",
settlement.name == "hardware" ~ "Hamra",
settlement.name == "garden fruit" ~ "Pri Gan",
settlement.name == "Almond" ~ "Shaked",
settlement.name == "Head turned" ~ "Rosh Pinna",
settlement.name == "Frankincense" ~ "Ma'ale Levona",
settlement.name == "Abraham's demons" ~ "Sdei Avraham",
TRUE ~ settlement.name  # Keeps other values unchanged
)
)
# Renaming the Hebrew variables:
Kneset23 <- Kneset23 %>%
rename(
Avoda = "אמת",
Yahadut_Hatora = "ג",
Hadash_Raam = "ודעם",
Ozma_Liberalit = "ז",
Peula_LeIsrael = "זך",
Zomet = "זץ",
Yamina = "טב",
Hazon = "י",
Adom_lavan = "יז",
Ihud_Habrit = "ינ",
Gush_Tanachi = "יק",
Manhigut_Hevratit = "יר",
Halev_Hayuhudi = "כ",
Ani_VeAta = "כן",
Israel_Beitenu = "ל",
Halicud = "מחל",
Kol_Hanashim = "נ",
Koach_Lehashpiaa = "נז",
Kama = "ני",
Mitkademet = "נק",
Ozma_Yehudit = "נץ",
Kahul_Lavan = "פה",
Piratim = "ףז",
Daam = "ץ",
Israelist = "ק",
Shema = "קי",
Seder_Hadash = "קך",
Mishpat_Zedek = "קץ",
Shas = "שס",
)
# mutate the names of the cities that are in other datasets.
Kneset23 <- Kneset23 %>%
mutate(
settlement.name = case_when(
settlement.name =="horizons" ~ "Ofakim",
settlement.name =="The view of the Galilee" ~ "Nof Hagalil",
settlement.name == "my peace" ~  "Shlomi" ,
settlement.name == "routes" ~ "Netivot",
settlement.name == "horizons" ~ "Ofakim",
settlement.name == "The view of the Galilee" ~ "Nof Hagalil",
settlement.name == "my peace" ~  "Shlomi" ,
settlement.name == "routes" ~ "Netivot",
settlement.name == "streets" ~ "Rehovot",
settlement.name == "Area" ~ "Azur",
settlement.name == "רחובות" ~ "Rehovot",
settlement.name == "fresh" ~ "Raanana",
settlement.name == "sons of Aish" ~ "Bnei Aish",
settlement.name == "a horse" ~ "Susya",
settlement.name == "scythe" ~ "Hermesh",
settlement.name == "pestle" ~ "Eli",
settlement.name == "ridges" ~ "Rekhasim",
settlement.name == "crimson" ~ "Argaman",
settlement.name == "earing" ~ "Harish",
settlement.name == "anemone" ~ "Kalanit",
settlement.name == "I will tell" ~ "Metzad",
settlement.name == "crop" ~ "Yevul",
settlement.name == "stake" ~ "Yated",
settlement.name == "Come on, Zoran" ~ "Kadima-Zoran",
settlement.name == "a fence" ~ "Gedera",
settlement.name == "measles" ~ "Hatzeva",
settlement.name == "Furia-Neva is working" ~ "Poria–Neve Oved",
settlement.name == "Ptolemy Yosef" ~ "Talmei Yosef",
settlement.name == "Solid stones" ~ "Avnei Eitan",
settlement.name == "horn" ~ "Tzofar",
settlement.name == "Horns of Samaria" ~ "Karnei Shomron",
settlement.name == "sapphire" ~ "Sapir",
settlement.name == "dawn" ~ "Tzohar",
settlement.name == "truffle" ~ "Kmehin",
settlement.name == "Chinese radish" ~ "Kadesh Barnea",
settlement.name == "towers" ~ "Migdalim",
settlement.name == "harvesting" ~ "Katzir",
settlement.name == "emerald" ~ "Bareket",
settlement.name == "A souvenir of her house" ~ "Mazkeret Batya",
settlement.name == "darling" ~ "Yakir",
settlement.name == "tower" ~ "Migdal",
settlement.name == "Ancients" ~ "Kedumim",
settlement.name == "face friend" ~ "Ma'ale Hever",
settlement.name == "on" ~ "Sha'al",
settlement.name == "Gold leaves" ~ "Alei Zahav",
settlement.name == "better" ~ "Yitav",
settlement.name == "Bethel" ~ "Beit El",
settlement.name == "Sheila" ~ "Shilo",
settlement.name == "Gems" ~ "Avnei Hefetz",
settlement.name == "Tarshiha" ~ "Ma'alot-Tarshiha",
settlement.name == "diligent" ~ "Harutzim",
settlement.name == "Roy" ~ "Ro'i",
settlement.name == "flint" ~ "Halamish",
settlement.name == "roots" ~ "Shorashim",
settlement.name == "Absalom" ~ "Avshalom",
settlement.name == "Dotan's introduction" ~ "Mevo Dotan",
settlement.name == "The Galilee" ~ "Gornot HaGalil",
settlement.name == "Shafram" ~ "Shfar'am",
settlement.name == "torches" ~ "Lapidot",
settlement.name == "Apple village" ~ "Kfar Tapuach",
settlement.name == "its openings" ~ "Petahya",
settlement.name == "grape" ~ "Einav",
settlement.name == "Dubb" ~ "Dovev",
settlement.name == "antimony" ~ "Kahal",
settlement.name == "Yavnal" ~ "Yavne'el",
settlement.name == "hardware" ~ "Hamra",
settlement.name == "garden fruit" ~ "Pri Gan",
settlement.name == "Almond" ~ "Shaked",
settlement.name == "Head turned" ~ "Rosh Pinna",
settlement.name == "Frankincense" ~ "Ma'ale Levona",
settlement.name == "Abraham's demons" ~ "Sdei Avraham",
TRUE ~ settlement.name  # Keeps other values unchanged
)
)
# Renaming the Hebrew variables:
Kneset24 <- Kneset24 %>%
rename(
Avoda = "אמת",
Yamina = "ב",
Yahadut_Hatora = "ג",
Hadash_Raam = "ודעם",
Zomet = "זץ",
Zionot_datit = "ט",
Gimlaim = "י",
Hacalcalit_Hadash = "יז",
Brit_Shotfut = "ינ",
Gush_Tanachi = "יק",
Manhigut_Hevratit = "יר",
Kvod_haadam = "יף",
Halev_Hayehudi = "כ",
Ani_VeAta = "כך",
Kahul_Lavan = "כן",
Israel_Beitenu = "ל",
Halicud = "מחל",
Merets = "מרצ",
Kama = "נ",
Olam_Hadash = "ני",
Anachnu = "נר",
Reshima_aravit = "עם",
Yesh_atid = "פה",
Piratim = "ףז",
Azmenu = "צי",
Hets = "צף",
Maan = "צכ",
Daam = "ץ",
Efshari = "ק",
Shema = "קי",
Seder_Hadash = "קך",
Mishpat_Zedek = "קץ",
Rapee = "ר",
Hatikva_Leshinui = "ר",
Democratit = "רק",
Am_Shalem = "רף",
Shas = "שס",
Tikva_Hadasha = "ת",
)
# mutate the names of the cities that are in other datasets.
Kneset24 <- Kneset24 %>%
mutate(
settlement.name = case_when(
settlement.name =="horizons" ~ "Ofakim",
settlement.name =="The view of the Galilee" ~ "Nof Hagalil",
settlement.name == "my peace" ~  "Shlomi" ,
settlement.name == "routes" ~ "Netivot",
settlement.name == "horizons" ~ "Ofakim",
settlement.name == "The view of the Galilee" ~ "Nof Hagalil",
settlement.name == "my peace" ~  "Shlomi" ,
settlement.name == "routes" ~ "Netivot",
settlement.name == "streets" ~ "Rehovot",
settlement.name == "Area" ~ "Azur",
settlement.name == "רחובות" ~ "Rehovot",
settlement.name == "fresh" ~ "Raanana",
settlement.name == "sons of Aish" ~ "Bnei Aish",
settlement.name == "a horse" ~ "Susya",
settlement.name == "scythe" ~ "Hermesh",
settlement.name == "pestle" ~ "Eli",
settlement.name == "ridges" ~ "Rekhasim",
settlement.name == "crimson" ~ "Argaman",
settlement.name == "earing" ~ "Harish",
settlement.name == "anemone" ~ "Kalanit",
settlement.name == "I will tell" ~ "Metzad",
settlement.name == "crop" ~ "Yevul",
settlement.name == "stake" ~ "Yated",
settlement.name == "Come on, Zoran" ~ "Kadima-Zoran",
settlement.name == "a fence" ~ "Gedera",
settlement.name == "measles" ~ "Hatzeva",
settlement.name == "Furia-Neva is working" ~ "Poria–Neve Oved",
settlement.name == "Ptolemy Yosef" ~ "Talmei Yosef",
settlement.name == "Solid stones" ~ "Avnei Eitan",
settlement.name == "horn" ~ "Tzofar",
settlement.name == "Horns of Samaria" ~ "Karnei Shomron",
settlement.name == "sapphire" ~ "Sapir",
settlement.name == "dawn" ~ "Tzohar",
settlement.name == "truffle" ~ "Kmehin",
settlement.name == "Chinese radish" ~ "Kadesh Barnea",
settlement.name == "towers" ~ "Migdalim",
settlement.name == "harvesting" ~ "Katzir",
settlement.name == "emerald" ~ "Bareket",
settlement.name == "A souvenir of her house" ~ "Mazkeret Batya",
settlement.name == "darling" ~ "Yakir",
settlement.name == "tower" ~ "Migdal",
settlement.name == "Ancients" ~ "Kedumim",
settlement.name == "face friend" ~ "Ma'ale Hever",
settlement.name == "on" ~ "Sha'al",
settlement.name == "Gold leaves" ~ "Alei Zahav",
settlement.name == "better" ~ "Yitav",
settlement.name == "Bethel" ~ "Beit El",
settlement.name == "Sheila" ~ "Shilo",
settlement.name == "Gems" ~ "Avnei Hefetz",
settlement.name == "Tarshiha" ~ "Ma'alot-Tarshiha",
settlement.name == "diligent" ~ "Harutzim",
settlement.name == "Roy" ~ "Ro'i",
settlement.name == "flint" ~ "Halamish",
settlement.name == "roots" ~ "Shorashim",
settlement.name == "Absalom" ~ "Avshalom",
settlement.name == "Dotan's introduction" ~ "Mevo Dotan",
settlement.name == "The Galilee" ~ "Gornot HaGalil",
settlement.name == "Shafram" ~ "Shfar'am",
settlement.name == "torches" ~ "Lapidot",
settlement.name == "Apple village" ~ "Kfar Tapuach",
settlement.name == "its openings" ~ "Petahya",
settlement.name == "grape" ~ "Einav",
settlement.name == "Dubb" ~ "Dovev",
settlement.name == "antimony" ~ "Kahal",
settlement.name == "Yavnal" ~ "Yavne'el",
settlement.name == "hardware" ~ "Hamra",
settlement.name == "garden fruit" ~ "Pri Gan",
settlement.name == "Almond" ~ "Shaked",
settlement.name == "Head turned" ~ "Rosh Pinna",
settlement.name == "Frankincense" ~ "Ma'ale Levona",
settlement.name == "Abraham's demons" ~ "Sdei Avraham",
TRUE ~ settlement.name  # Keeps other values unchanged
)
)
# Group the dataframe by 'settlement.ID'
Kneset21_grouped <- Kneset21 %>% group_by(settlement.ID)
# Select columns from index 11 onwards (assuming 'settlement.ID' is column 11)
cols_to_sum <- names(Kneset21)[4:ncol(Kneset21)]
# Sum each column from 12 onwards within each settlement group
settlement_sums <- Kneset21_grouped %>%
summarise(across(cols_to_sum, sum))  # Sum each column using 'across'
citynames_and_id <- Kneset21 %>% distinct(settlement.ID,settlement.name)
settlement_sums <- left_join(settlement_sums, citynames_and_id, by = "settlement.ID")
chopped_elections_sum <- settlement_sums[, 6:ncol(settlement_sums)]
chopped_elections_sum$max_value <- apply(chopped_elections_sum, 1, max)
set.seed(123)
# Function to get column name of max value in each row
max_col_names <- apply(chopped_elections_sum, 1, function(row) {
colnames(chopped_elections_sum)[which.max(row)]
})
# Add the result as a new column to the original data frame
chopped_elections_sum$max_col_name <- max_col_names
find_max_value <- function(row) {
if (any(is.na(row))) {
NA  # Return NA if there are any NA values in the row
} else {
max(row)
}
}
chopped_elections_sum$max_value <- apply(chopped_elections_sum, 1, function(row) max(as.numeric(row), na.rm = TRUE))
new_elections_sum <- chopped_elections_sum[,(ncol(chopped_elections_sum)-2):ncol(chopped_elections_sum)]
new_elections_sum <- left_join(new_elections_sum, citynames_and_id, by = "settlement.name")
new_elections_sum <- new_elections_sum[,c(4,1,3,2)]
hepler_df <- settlement_sums[,c(1,2,3)]
new_elections_sum <- left_join(new_elections_sum, hepler_df, by = "settlement.ID")
new_elections_sum$VoterPrecentage <- new_elections_sum$Voters/new_elections_sum$BZB
new_elections_sum$Party.Precentage <- new_elections_sum$max_value/new_elections_sum$Voters
Kneset21_summed <- new_elections_sum
Kneset21_summed
# Group the dataframe by 'settlement.ID'
Kneset22_grouped <- Kneset22 %>% group_by(settlement.ID)
# Select columns from index 11 onwards (assuming 'settlement.ID' is column 11)
cols_to_sum <- names(Kneset22)[4:ncol(Kneset22)]
# Sum each column from 12 onwards within each settlement group
settlement_sums <- Kneset22_grouped %>%
summarise(across(cols_to_sum, sum))  # Sum each column using 'across'
citynames_and_id <- Kneset22 %>% distinct(settlement.ID,settlement.name)
settlement_sums <- left_join(settlement_sums, citynames_and_id, by = "settlement.ID")
chopped_elections_sum <- settlement_sums[, 6:ncol(settlement_sums)]
chopped_elections_sum$max_value <- apply(chopped_elections_sum, 1, max)
set.seed(123)
# Function to get column name of max value in each row
max_col_names <- apply(chopped_elections_sum, 1, function(row) {
colnames(chopped_elections_sum)[which.max(row)]
})
# Add the result as a new column to the original data frame
chopped_elections_sum$max_col_name <- max_col_names
find_max_value <- function(row) {
if (any(is.na(row))) {
NA  # Return NA if there are any NA values in the row
} else {
max(row)
}
}
chopped_elections_sum$max_value <- apply(chopped_elections_sum, 1, function(row) max(as.numeric(row), na.rm = TRUE))
new_elections_sum <- chopped_elections_sum[,(ncol(chopped_elections_sum)-2):ncol(chopped_elections_sum)]
new_elections_sum <- left_join(new_elections_sum, citynames_and_id, by = "settlement.name")
new_elections_sum <- new_elections_sum[,c(4,1,3,2)]
hepler_df <- settlement_sums[,c(1,2,3)]
new_elections_sum <- left_join(new_elections_sum, hepler_df, by = "settlement.ID")
new_elections_sum$VoterPrecentage <- new_elections_sum$Voters/new_elections_sum$BZB
new_elections_sum$Party.Precentage <- new_elections_sum$max_value/new_elections_sum$Voters
Kneset22_summed <- new_elections_sum
Kneset22_summed
# Group the dataframe by 'settlement.ID'
Kneset23_grouped <- Kneset23 %>% group_by(settlement.ID)
# Select columns from index 11 onwards (assuming 'settlement.ID' is column 11)
cols_to_sum <- names(Kneset23)[8:ncol(Kneset23)]
# Sum each column from 12 onwards within each settlement group
settlement_sums <- Kneset23_grouped %>%
summarise(across(cols_to_sum, sum))  # Sum each column using 'across'
citynames_and_id <- Kneset23 %>% distinct(settlement.ID,settlement.name)
settlement_sums <- left_join(settlement_sums, citynames_and_id, by = "settlement.ID")
chopped_elections_sum <- settlement_sums[, 6:ncol(settlement_sums)]
chopped_elections_sum$max_value <- apply(chopped_elections_sum, 1, max)
set.seed(123)
# Function to get column name of max value in each row
max_col_names <- apply(chopped_elections_sum, 1, function(row) {
colnames(chopped_elections_sum)[which.max(row)]
})
# Add the result as a new column to the original data frame
chopped_elections_sum$max_col_name <- max_col_names
find_max_value <- function(row) {
if (any(is.na(row))) {
NA  # Return NA if there are any NA values in the row
} else {
max(row)
}
}
chopped_elections_sum$max_value <- apply(chopped_elections_sum, 1, function(row) max(as.numeric(row), na.rm = TRUE))
new_elections_sum <- chopped_elections_sum[,(ncol(chopped_elections_sum)-2):ncol(chopped_elections_sum)]
new_elections_sum <- left_join(new_elections_sum, citynames_and_id, by = "settlement.name")
new_elections_sum <- new_elections_sum[,c(4,1,3,2)]
hepler_df <- settlement_sums[,c(1,2,3)]
new_elections_sum <- left_join(new_elections_sum, hepler_df, by = "settlement.ID")
new_elections_sum$VoterPrecentage <- new_elections_sum$Voters/new_elections_sum$BZB
new_elections_sum$Party.Precentage <- new_elections_sum$max_value/new_elections_sum$Voters
Kneset23_summed <- new_elections_sum
Kneset23_summed
# Group the dataframe by 'settlement.ID'
Kneset24_grouped <- Kneset24 %>% group_by(settlement.ID)
# Select columns from index 11 onwards (assuming 'settlement.ID' is column 11)
cols_to_sum <- names(Kneset24)[8:ncol(Kneset24)]
# Sum each column from 12 onwards within each settlement group
settlement_sums <- Kneset24_grouped %>%
summarise(across(cols_to_sum, sum))  # Sum each column using 'across'
citynames_and_id <- Kneset24 %>% distinct(settlement.ID,settlement.name)
settlement_sums <- left_join(settlement_sums, citynames_and_id, by = "settlement.ID")
chopped_elections_sum <- settlement_sums[, 6:ncol(settlement_sums)]
chopped_elections_sum$max_value <- apply(chopped_elections_sum, 1, max)
set.seed(123)
# Function to get column name of max value in each row
max_col_names <- apply(chopped_elections_sum, 1, function(row) {
colnames(chopped_elections_sum)[which.max(row)]
})
# Add the result as a new column to the original data frame
chopped_elections_sum$max_col_name <- max_col_names
find_max_value <- function(row) {
if (any(is.na(row))) {
NA  # Return NA if there are any NA values in the row
} else {
max(row)
}
}
chopped_elections_sum$max_value <- apply(chopped_elections_sum, 1, function(row) max(as.numeric(row), na.rm = TRUE))
new_elections_sum <- chopped_elections_sum[,(ncol(chopped_elections_sum)-2):ncol(chopped_elections_sum)]
new_elections_sum <- left_join(new_elections_sum, citynames_and_id, by = "settlement.name")
new_elections_sum <- new_elections_sum[,c(4,1,3,2)]
hepler_df <- settlement_sums[,c(1,2,3)]
new_elections_sum <- left_join(new_elections_sum, hepler_df, by = "settlement.ID")
new_elections_sum$VoterPrecentage <- new_elections_sum$Voters/new_elections_sum$BZB
new_elections_sum$Party.Precentage <- new_elections_sum$max_value/new_elections_sum$Voters
Kneset24_summed <- new_elections_sum
Kneset24_summed
# write.csv(Kneset21_summed, "../data/Translated/Kneset21_summed.csv")
# write.csv(Kneset22_summed, "../data/Translated/Kneset22_summed.csv")
# write.csv(Kneset23_summed, "../data/Translated/Kneset23_summed.csv")
# write.csv(Kneset24_summed, "../data/Translated/Kneset24_summed.csv")
# write.csv(Kneset25_summed, "../data/Translated/Kneset25_summed.csv")
cat(readLines('../data/README.md'), sep = '\n')
# write.csv(Kneset21_summed, "../data/Translated/Kneset21_summed.csv")
# write.csv(Kneset22_summed, "../data/Translated/Kneset22_summed.csv")
# write.csv(Kneset23_summed, "../data/Translated/Kneset23_summed.csv")
# write.csv(Kneset24_summed, "../data/Translated/Kneset24_summed.csv")
# write.csv(Kneset25_summed, "../data/Translated/Kneset25_summed.csv")
write.csv(Properties_rooms, "../data/Translated/Properties_Rooms.csv")
write.csv(Purcheuses, "../data/Translated/Purchuses.csv")
write.csv(Vacant_apartments, "../data/Translated/Vacant_Apartments")
